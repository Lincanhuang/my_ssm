<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:util="http://www.springframework.org/schema/util"
    xsi:schemaLocation="http://www.springframework.org/schema/beans 
        			http://www.springframework.org/schema/beans/spring-beans.xsd
        			 http://www.springframework.org/schema/util
        			 http://www.springframework.org/schema/util/spring-util.xsd ">
        			 
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<property name="securityManager" ref="securityManager" />
		<property name="loginUrl" value="/login" />
		<property name="successUrl" value="/" />
<!-- 		<property name="unauthorizedUrl" value="/?login" /> -->
		
<!--	初始配置，现采用自定义	-->
		<property name="filterChainDefinitions" >
			<value>
				/user/** = anon
				/user** = anon
				/submitLogin = anon
				/admin** = authc,roles[admin]
				/admin/** = authc,roles[admin]
				/test/** = authc,roles[test]
				/per/** = authc,perms["::invoke"]
				/static/** = anon
				/** = authc
           </value>
		</property>
		<!-- 读取初始自定义权限内容-->
<!-- 	      <property name="filterChainDefinitions" value="#{shiroManager.loadFilterChainDefinitions()}"/>    -->
<!-- 	      <property name="filters"> -->
<!-- 	          <util:map> -->
<!-- 	             <entry key="anon" value-ref="anon"></entry> -->
<!-- 	             <entry key="role" value-ref="role"></entry> -->
<!-- 	             <entry key="simple" value-ref="simple"></entry> -->
<!-- 	             <entry key="permission" value-ref="permission"></entry> -->
<!-- 	             <entry key="kickout" value-ref="kickoutSessionFilter"></entry> -->
<!-- 	          </util:map> -->
<!-- 	      </property> -->
	</bean>
	
   <bean id="realm" class="ch.my.framework.shiro.realm.ShiroRealm">
   		<property name="credentialsMatcher">
   			<bean class="org.apache.shiro.authc.credential.HashedCredentialsMatcher" >
		   		<constructor-arg name="hashAlgorithmName" value="SHA-256"/>
		   		<property name="hashIterations" value="2" />
		   </bean>
   		</property>
   </bean>
   
	<!-- 安全管理器 -->
   <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
       <property name="realm" ref="realm" />
       <property name="sessionManager" ref="sessionManager"/>
<!--        <property name="rememberMeManager" ref="rememberMeManager"/> -->
<!--        <property name="cacheManager" > -->
<!--        		<bean class="ch.my.framework.shiro.cache.ShiroCacheManager" /> -->
<!--        </property> -->
       
   </bean>
   
   <!-- Session Manager -->
	<bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager" >
		<!-- 相隔多久检查一次session的有效性   -->
	 	<property name="sessionValidationInterval" value="300000"/>  
	 	 <!-- session 有效时间为半小时 （毫秒单位）-->  
		<property name="globalSessionTimeout" value="180000"/>
	  	<property name="sessionDAO" >
	   		<bean class="ch.my.framework.shiro.session.dao.ShiroSessionDao">
	   			<property name="cacheManager" ref="ehcache" />
<!-- 	   				<bean class="ch.my.framework.shiro.cache.ShiroCacheManager" /> -->
<!-- 	   			</property> -->
	   		</bean>
	  	</property>
	  	
	    <property name="sessionIdUrlRewritingEnabled" value="false"/>
	    
<!-- 	    <property name="sessionFactory" > -->
<!-- 	    	<bean class="ch.my.framework.shiro.session.ShiroSessionFactory" /> -->
<!-- 	    </property> -->
	    
	   <!-- session 监听，可以多个。 -->
<!-- 	   <property name="sessionListeners"> -->
<!-- 	       <list> -->
<!-- 	           <ref bean="customSessionListener"/> -->
<!-- 	       </list> -->
<!-- 	   </property> -->
	  <!-- 是否开启 检测，默认开启 -->
	  <property name="sessionValidationSchedulerEnabled" value="true"/>
	   <!-- 是否删除无效的，默认也是开启 -->
	  <property name="deleteInvalidSessions" value="true"/>
		<!-- 会话Cookie模板 -->
	   <property name="sessionIdCookie" ref="sessionIdCookie"/>
	</bean>
   
	<bean id="sessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
	    <constructor-arg name="name" value="shiroSelfCookie"/>
	</bean>
	
<!-- 	<bean id="shiroSessionFactory" class="ch.my.framework.shiro.session.ShiroSessionFactory"/> -->
<!-- 	<bean id="shiroSessionDao"  class="ch.my.framework.shiro.session.ShiroSessionDao"> -->
<!-- 		<property name="shiroRepository" > -->
<!-- 			<bean class="ch.my.framework.shiro.session.ShiroRepository" /> -->
<!-- 		</property> -->
<!-- 	</bean> -->
 	<!-- Shiro生命周期处理器-->
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />
	
</beans>